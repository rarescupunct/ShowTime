@page "/listband"
@rendermode InteractiveServer
@using System.Net.Http.Json
@using ShowTime.Models
@using ShowTime.Enums
@using ShowTime.Repositories.Interfaces
@inject IRepositoryBand RepositoryBand



<MudTable Items="@Elements" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Genre</MudTh>
        <MudTh>Update</MudTh>
        <MudTh>Delete</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Location">@context.Genre</MudTd>
        <MudTd DataLabel="Update">
            <MudButton Variant="Variant.Filled" Color="Color.Tertiary" @onclick="()=>UpdateBand(context)">Update</MudButton>
        </MudTd>
        <MudTd DataLabel="Delete">
            <MudButton StartIcon="@Icons.Material.Filled.Delete" @onclick="()=>DeleteBandAsync(context)">Delete</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>
@if (_toggleupdate)
{
}

@code {
    private bool _toggleupdate;
    
    private IEnumerable<Band> Elements = new List<Band>();

    protected override async Task OnInitializedAsync()
    {
        Elements = await RepositoryBand.GetAllAsync();
    }

    private async void DeleteBandAsync(Band band)
    {
        RepositoryBand.Delete(band);
        await RepositoryBand.SaveChangesAsync();
        Elements = await RepositoryBand.GetAllAsync();
        StateHasChanged();
    }

    private void UpdateBand(Band band)
    {
        _toggleupdate = true;
    }
}
