@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">ShowTime</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#000000",
        Background = "#FFA500", // Orange background
        Surface = "#E59400",    // Slightly darker orange
        AppbarBackground = "#2c2c2c", // Dark gray AppBar
        AppbarText = "#FFFFFF", // White text on AppBar
        DrawerBackground = "#2c2c2c", // Dark gray Drawer
        DrawerText = "#FFFFFF",
        DrawerIcon = "#FFFFFF",
        TextPrimary = "#000000", // Black text elsewhere
        TextSecondary = "#333333",
        GrayLight = "#f5c882",
        GrayLighter = "#fff3d6"
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#FFA500",
        Background = "#FFA500",
        Surface = "#E59400",
        AppbarBackground = "#2c2c2c",
        AppbarText = "#FFFFFF",
        DrawerBackground = "#2c2c2c",
        DrawerText = "#FFFFFF",
        DrawerIcon = "#FFFFFF",
        TextPrimary = "#000000",
        TextSecondary = "#333333",
        ActionDefault = "#E0E0E0",
        ActionDisabled = "#BDBDBD",
        ActionDisabledBackground = "#757575",
        GrayLight = "#f5c882",
        GrayLighter = "#fff3d6",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80"
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}


